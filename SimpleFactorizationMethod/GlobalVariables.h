#pragma once

#include <cstdint>
#include <chrono>

#include <array>
#include <vector>

namespace SimpleFactorizationMethod
{
   namespace Types
   {
      template< class T >
      struct pPolardRunInfo
      {
         std::chrono::duration< double > elapsedTime;
         int iterationNumber;
         T originalNumber;
         T factor;
      };
   } // Types

   namespace Consts
   {
      const std::array< uint16_t, 54 > PrimeNumbersArray16 =
      {
         2, 	3, 	5, 	7, 	11, 	13, 	17, 	19, 	23, 	29, 	31, 	37,
         41, 	43, 	47, 	53, 	59, 	61, 	67, 	71, 	73, 	79, 	83, 	89,
         97, 	101, 	103, 	107, 	109, 	113, 	127, 	131, 	137, 	139, 	149, 	151,
         157, 	163, 	167, 	173, 	179, 	181, 	191, 	193, 	197, 	199, 	211, 	223,
         227, 	229, 	233, 	239, 	241, 	251
      };

      const std::array< uint32_t, 198 > PrimeNumbersArray32 =
      { 
         257,  263, 	269, 	271, 	277, 	281,
         283, 	293, 	307, 	311, 	313, 	317, 	331, 	337, 	347, 	349, 	353, 	359,
         367, 	373, 	379, 	383, 	389, 	397, 	401, 	409, 	419, 	421, 	431, 	433,
         439, 	443, 	449, 	457, 	461, 	463, 	467, 	479, 	487, 	491, 	499, 	503,
         509, 	521, 	523, 	541, 	547, 	557, 	563, 	569, 	571, 	577, 	587, 	593,
         599, 	601, 	607, 	613, 	617, 	619, 	631, 	641, 	643, 	647, 	653, 	659,
         661, 	673, 	677, 	683, 	691, 	701, 	709, 	719, 	727, 	733, 	739, 	743,
         751, 	757, 	761, 	769, 	773, 	787, 	797, 	809, 	811, 	821, 	823, 	827,
         829, 	839, 	853, 	857, 	859, 	863, 	877, 	881, 	883, 	887, 	907, 	911,
         919, 	929, 	937, 	941, 	947, 	953, 	967, 	971, 	977, 	983, 	991, 	997,
         983,  991,  997,  1009, 1013, 1019, 1021, 1031, 1033, 1039, 1049, 1051,
         1061, 1063, 1069, 1087, 1091, 1093, 1097, 1103, 1109, 1117, 1123, 1129,
         1151, 1153, 1163, 1171, 1181, 1187, 1193, 1201, 1213, 1217, 1223, 1229, 
         1231, 1237, 1249, 1259, 1277, 1279, 1283, 1289, 1291, 1297, 1301, 1303, 
         1307, 1319, 1321, 1327, 1361, 1367, 1373, 1381, 1399, 1409, 1423, 1427,
         1429, 1433, 1439, 1447, 1451, 1453, 1459, 1471, 1481, 1483, 1487, 1489,
         
         4909, 4919, 4931, 4933, 4937, 4943, 4951, 4957, 4967, 4969, 4973, 4987
      
      };

      const std::array< uint64_t, 60 > PrimeNumbersArray64 =
      {
         65123,   65129,   65141,   65147,   65167,
         65171,   65173,   65179,   65183,   65203,
         65213,   65239,   65257,   65267,   65269,
         65287,   65293,   65309,   65323,   65327,
         65353,   65357,   65371,   65381,   65393,
         65407,   65413,   65419,   65423,   65437,
         65447,   65449,   65479,   65497,   65519,
         65521,   65537,   65539,   65543,   65551,
         65557,   65563,   65579,   65581,   65587,
         65599,   65609,   65617,   65629,   65633,
         65647,   65651,   65657,   65677,   65687,
         65699,   65701,   65707,   65713,   65717
      };
   } // Consts

   namespace Global
   {
   } // Global
} // SimpleFactorizationMethods
 
